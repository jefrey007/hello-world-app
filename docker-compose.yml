version: '3.8'

services:
  # Frontend ReactJS application
  frontend:
    build:
      context: ./frontend/src           # Corrected to frontend/src
      dockerfile: Dockerfile            # Specify Dockerfile inside frontend/src
    ports:
      - "3000:3000"                     # Expose React app on port 3000
    depends_on:
      - backend                         # Ensure backend is started before frontend
    environment:
      - REACT_APP_BACKEND_URL=http://backend:5000  # Backend API URL
    image: jefrey0/hello-world-frontend:latest  # Docker Hub username replaced

  # Backend Flask application
  backend:
    build: ./backend                    # Build from backend directory
    ports:
      - "5000:5000"                     # Expose Flask app on port 5000
    depends_on:
      - postgres                        # Ensure PostgreSQL is started before backend
    environment:
      - DB_HOST=postgres                # Database hostname
      - DB_NAME=mydatabase              # Database name
      - DB_USER=user                    # DB user
      - DB_PASSWORD=password            # DB password
    volumes:
      - ./backend:/app                  # Mount backend code to container for live changes
    image: jefrey0/hello-world-backend:latest  # Docker Hub username replaced

  # PostgreSQL Database
  postgres:
    image: postgres:13                  # Use the official PostgreSQL 13 image
    environment:
      POSTGRES_USER: user               # DB user
      POSTGRES_PASSWORD: password       # DB password
      POSTGRES_DB: mydatabase           # Database name
    ports:
      - "5432:5432"                     # Expose PostgreSQL on port 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persistent volume for data storage

# Named volume to persist PostgreSQL data across container restarts
volumes:
  postgres_data:
    driver: local
